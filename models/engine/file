#!/usr/bin/python3
"""Defines a FileStorage class that serializes instances
	to a JSON file and deserializes JSON file to instances.
"""
import json
import uuid
from datetime import datetime
from models.base_model import BaseModel

class FileStorage:
	"""Serializes instance to a JSOn file and deserializes JSON file to instances."""
	__file_path = "file.json"
	__objects = {}

	def all(self):
		"""Returns the dictionary __objects"""
		return FileStorage.__objects

	def new(self, obj):
		"""Sets in __objects the obj with key <obj class name>.id"""	
		key = obj.__class__.__name__ + "." + obj.id
		FileStorage.__objects[key] = obj

	def save(self):
		"""Serializes __objects to the JSON file (path: __file_path)"""
		obj_dict = {key: obj[key].to_dict() for key in FileStorage.__objects.keys()}
		with open(FileStorage.__file_path, 'w') as f:
			json.dump(obj_dict, f)

	def reload(self):
		"""Deserializes the JSON file to __objects (if the file exists)"""
		try:
			with open(FileStorage.__file_path, 'r') as f:
				obj_dict = json.load(f)
				for key, value in obj_dict.items():
					cls_name = value["__class__"]
					if cls_name in globals():
						cls = globals()[cls_name]
						FileStorage.__objects[key] = cls(**value)
		except FileNotFoundError:
			pass
